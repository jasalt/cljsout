;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name breakout.draw, :imports nil, :requires {canvas monet.canvas, monet.canvas monet.canvas, s clojure.string, clojure.string clojure.string, breakout.utils breakout.utils}, :uses {log breakout.utils, get-canvas-size breakout.utils, str-float breakout.utils}, :defs {brick {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/draw.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([ctx {:keys [x y w h]} val]))}, :name breakout.draw/brick, :variadic false, :file "src/breakout/draw.cljs", :end-column 12, :method-params ([ctx p__28606 val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx {:keys [x y w h]} val]))}, ball {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/draw.cljs", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([ctx v]))}, :name breakout.draw/ball, :variadic false, :file "src/breakout/draw.cljs", :end-column 11, :method-params ([ctx v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx v]))}, pad {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/draw.cljs", :line 25, :column 7, :end-line 25, :end-column 10, :arglists (quote ([ctx {:keys [x y w h]} val]))}, :name breakout.draw/pad, :variadic false, :file "src/breakout/draw.cljs", :end-column 10, :method-params ([ctx p__28611 val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctx {:keys [x y w h]} val]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :w :angle :h :x}, :order [:x :y :w :h :angle]}, :doc nil}