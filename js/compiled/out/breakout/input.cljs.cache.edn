;; Analyzed by ClojureScript 1.7.145
{:use-macros nil, :excludes #{}, :name breakout.input, :imports nil, :requires {r reagi.core, reagi.core reagi.core, canvas monet.canvas, monet.canvas monet.canvas, g-events goog.events, goog.events goog.events, breakout.utils breakout.utils, breakout.update breakout.update}, :uses {scale-value breakout.utils, move-to! breakout.update, str-float breakout.utils}, :defs {read-orientation-event {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 102, :column 7, :end-line 102, :end-column 29, :arglists (quote ([e]))}, :name breakout.input/read-orientation-event, :variadic false, :file "src/breakout/input.cljs", :end-column 29, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, set-initial-inputs! {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 175, :column 7, :end-line 175, :end-column 26, :arglists (quote ([]))}, :name breakout.input/set-initial-inputs!, :variadic false, :file "src/breakout/input.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, start-mouse-listener {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 74, :column 7, :end-line 74, :end-column 27, :arglists (quote ([]))}, :name breakout.input/start-mouse-listener, :variadic false, :file "src/breakout/input.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mouse-x-offset {:name breakout.input/mouse-x-offset, :file "src/breakout/input.cljs", :line 87, :column 1, :end-line 87, :end-column 20, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 87, :column 6, :end-line 87, :end-column 20}}, orientation-change-stream {:name breakout.input/orientation-change-stream, :file "src/breakout/input.cljs", :line 100, :column 1, :end-line 100, :end-column 35, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 100, :column 10, :end-line 100, :end-column 35}}, UP {:name breakout.input/UP, :file "src/breakout/input.cljs", :line 19, :column 1, :end-line 19, :end-column 8, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 19, :column 6, :end-line 19, :end-column 8}}, initial-config {:name breakout.input/initial-config, :file "src/breakout/input.cljs", :line 141, :column 1, :end-line 141, :end-column 20, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 141, :column 6, :end-line 141, :end-column 20}}, start-orientation-listener {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 107, :column 7, :end-line 107, :end-column 33, :arglists (quote ([]))}, :name breakout.input/start-orientation-listener, :variadic false, :file "src/breakout/input.cljs", :end-column 33, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, stop-mouse-listener {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 80, :column 7, :end-line 80, :end-column 26, :arglists (quote ([]))}, :name breakout.input/stop-mouse-listener, :variadic false, :file "src/breakout/input.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 80, :end-line 80, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, pad-position-stream {:name breakout.input/pad-position-stream, :file "src/breakout/input.cljs", :line 131, :column 1, :end-line 131, :end-column 29, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 131, :column 10, :end-line 131, :end-column 29}}, keyup-stream {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 33, :column 7, :end-line 33, :end-column 19, :arglists (quote ([]))}, :name breakout.input/keyup-stream, :variadic false, :file "src/breakout/input.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, config {:name breakout.input/config, :file "src/breakout/input.cljs", :line 158, :column 1, :end-line 158, :end-column 16, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 158, :column 10, :end-line 158, :end-column 16}}, RIGHT {:name breakout.input/RIGHT, :file "src/breakout/input.cljs", :line 20, :column 1, :end-line 20, :end-column 11, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 20, :column 6, :end-line 20, :end-column 11}}, PAUSE {:name breakout.input/PAUSE, :file "src/breakout/input.cljs", :line 23, :column 1, :end-line 23, :end-column 11, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 23, :column 6, :end-line 23, :end-column 11}}, active-keys-stream {:name breakout.input/active-keys-stream, :file "src/breakout/input.cljs", :line 42, :column 1, :end-line 42, :end-column 24, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 42, :column 6, :end-line 42, :end-column 24}}, stop-orientation-listener {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 112, :column 7, :end-line 112, :end-column 32, :arglists (quote ([]))}, :name breakout.input/stop-orientation-listener, :variadic false, :file "src/breakout/input.cljs", :end-column 32, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 112, :end-line 112, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, set-config {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 164, :column 7, :end-line 164, :end-column 17, :arglists (quote ([new-state & path])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(new-state path)], :arglists ([new-state & path]), :arglists-meta (nil)}}, :name breakout.input/set-config, :variadic true, :file "src/breakout/input.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(new-state path)], :arglists ([new-state & path]), :arglists-meta (nil)}, :method-params [(new-state path)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 1, :fn-var true, :arglists ([new-state & path])}, LEFT {:name breakout.input/LEFT, :file "src/breakout/input.cljs", :line 21, :column 1, :end-line 21, :end-column 10, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 21, :column 6, :end-line 21, :end-column 10}}, mouse-position-stream {:name breakout.input/mouse-position-stream, :file "src/breakout/input.cljs", :line 91, :column 1, :end-line 91, :end-column 27, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 91, :column 6, :end-line 91, :end-column 27}}, mouse-move-stream {:name breakout.input/mouse-move-stream, :file "src/breakout/input.cljs", :line 72, :column 1, :end-line 72, :end-column 27, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 72, :column 10, :end-line 72, :end-column 27}}, pause! {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 13, :column 6, :end-line 13, :end-column 12}, :name breakout.input/pause!, :variadic false, :file "src/breakout/input.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists nil}, default-inputs {:name breakout.input/default-inputs, :file "src/breakout/input.cljs", :line 160, :column 1, :end-line 160, :end-column 20, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 160, :column 6, :end-line 160, :end-column 20}}, orientation-stream {:name breakout.input/orientation-stream, :file "src/breakout/input.cljs", :line 122, :column 1, :end-line 122, :end-column 28, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 122, :column 10, :end-line 122, :end-column 28}}, keydown-stream {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 27, :column 7, :end-line 27, :end-column 21, :arglists (quote ([]))}, :name breakout.input/keydown-stream, :variadic false, :file "src/breakout/input.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, SPACE {:name breakout.input/SPACE, :file "src/breakout/input.cljs", :line 22, :column 1, :end-line 22, :end-column 11, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 22, :column 6, :end-line 22, :end-column 11}}, set-input {:protocol-inline nil, :meta {:file "/Users/js/dev/cljsout/src/breakout/input.cljs", :line 168, :column 7, :end-line 168, :end-column 16, :arglists (quote ([input-type new-state]))}, :name breakout.input/set-input, :variadic false, :file "src/breakout/input.cljs", :end-column 16, :method-params ([input-type new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([input-type new-state]))}}, :require-macros {r reagi.core, reagi.core reagi.core}, :cljs.analyzer/constants {:seen #{:beta :game :orientation :mouse :running :toggle-fn :breakout.input/up :unscaled :active :gamma :alpha :breakout.input/down :input :scaled}, :order [:breakout.input/down :breakout.input/up :gamma :alpha :beta :scaled :unscaled :input :game :mouse :orientation :active :toggle-fn :running]}, :doc nil}